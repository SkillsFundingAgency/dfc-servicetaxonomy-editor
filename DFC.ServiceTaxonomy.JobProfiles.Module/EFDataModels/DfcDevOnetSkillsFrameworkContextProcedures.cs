// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.Data.SqlClient;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;
using DFC.ServiceTaxonomy.JobProfiles.Module.EFDataModels;

namespace DFC.ServiceTaxonomy.JobProfiles.Module.EFDataModels
{
    public partial class DfcDevOnetSkillsFrameworkContext
    {
        private DfcDevOnetSkillsFrameworkContextProcedures _procedures;

        public virtual DfcDevOnetSkillsFrameworkContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new DfcDevOnetSkillsFrameworkContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public DfcDevOnetSkillsFrameworkContextProcedures GetProcedures()
        {
            return Procedures;
        }
    }

    public partial class DfcDevOnetSkillsFrameworkContextProcedures
    {
        private readonly DfcDevOnetSkillsFrameworkContext _context;

        public DfcDevOnetSkillsFrameworkContextProcedures(DfcDevOnetSkillsFrameworkContext context)
        {
            _context = context;
        }

        public virtual async Task<List<sp_GetAttributesByOnNetCodeForEachSectionGroupedToDeleteResult>> sp_GetAttributesByOnNetCodeForEachSectionGroupedToDeleteAsync(string ONetCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ONetCode",
                    Size = 20,
                    Value = ONetCode ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<sp_GetAttributesByOnNetCodeForEachSectionGroupedToDeleteResult>("EXEC @returnValue = [dbo].[sp_GetAttributesByOnNetCodeForEachSectionGrouped-ToDelete] @ONetCode", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<sp_GetAttributesByOnNetCodeForEachSectionGroupedV2ToDeleteResult>> sp_GetAttributesByOnNetCodeForEachSectionGroupedV2ToDeleteAsync(string ONetCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ONetCode",
                    Size = 20,
                    Value = ONetCode ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<sp_GetAttributesByOnNetCodeForEachSectionGroupedV2ToDeleteResult>("EXEC @returnValue = [dbo].[sp_GetAttributesByOnNetCodeForEachSectionGroupedV2-ToDelete] @ONetCode", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<sp_GetAttributesByOnNetCodeForEachSectionGroupedV3Result>> sp_GetAttributesByOnNetCodeForEachSectionGroupedV3Async(string ONetCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ONetCode",
                    Size = 20,
                    Value = ONetCode ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<sp_GetAttributesByOnNetCodeForEachSectionGroupedV3Result>("EXEC @returnValue = [dbo].[sp_GetAttributesByOnNetCodeForEachSectionGroupedV3] @ONetCode", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<sp_GetAttributesByOnNetCodeGroupedToDeleteResult>> sp_GetAttributesByOnNetCodeGroupedToDeleteAsync(string ONetCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ONetCode",
                    Size = 20,
                    Value = ONetCode ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<sp_GetAttributesByOnNetCodeGroupedToDeleteResult>("EXEC @returnValue = [dbo].[sp_GetAttributesByOnNetCodeGrouped-ToDelete] @ONetCode", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<sp_GetAttributesByOnNetCodeGroupedV2ToDeleteResult>> sp_GetAttributesByOnNetCodeGroupedV2ToDeleteAsync(string ONetCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ONetCode",
                    Size = 20,
                    Value = ONetCode ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<sp_GetAttributesByOnNetCodeGroupedV2ToDeleteResult>("EXEC @returnValue = [dbo].[sp_GetAttributesByOnNetCodeGroupedV2-ToDelete] @ONetCode", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<sp_GetAttributesByOnNetCodeToDeleteResult>> sp_GetAttributesByOnNetCodeToDeleteAsync(string ONetCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ONetCode",
                    Size = 20,
                    Value = ONetCode ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<sp_GetAttributesByOnNetCodeToDeleteResult>("EXEC @returnValue = [dbo].[sp_GetAttributesByOnNetCode-ToDelete] @ONetCode", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<sp_GetAttributesForProfileToDeleteResult>> sp_GetAttributesForProfileToDeleteAsync(string ONetCode, string SOCCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ONetCode",
                    Size = 20,
                    Value = ONetCode ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "SOCCode",
                    Size = 20,
                    Value = SOCCode ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<sp_GetAttributesForProfileToDeleteResult>("EXEC @returnValue = [dbo].[sp_GetAttributesForProfile-ToDelete] @ONetCode, @SOCCode", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<sp_GetInterestsByOnetCodeToDeleteResult>> sp_GetInterestsByOnetCodeToDeleteAsync(string ONetCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ONetCode",
                    Size = 20,
                    Value = ONetCode ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<sp_GetInterestsByOnetCodeToDeleteResult>("EXEC @returnValue = [dbo].[sp_GetInterestsByOnetCode-ToDelete] @ONetCode", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<sp_GetTechnologyDetailsByOnetCodeResult>> sp_GetTechnologyDetailsByOnetCodeAsync(string ONetCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ONetCode",
                    Size = 20,
                    Value = ONetCode ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<sp_GetTechnologyDetailsByOnetCodeResult>("EXEC @returnValue = [dbo].[sp_GetTechnologyDetailsByOnetCode] @ONetCode", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<sp_GetToolsTecByOnetCodeToDeleteResult>> sp_GetToolsTecByOnetCodeToDeleteAsync(string ONetCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ONetCode",
                    Size = 20,
                    Value = ONetCode ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<sp_GetToolsTecByOnetCodeToDeleteResult>("EXEC @returnValue = [dbo].[sp_GetToolsTecByOnetCode-ToDelete] @ONetCode", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<sp_GetToolsTecByOnetCodeV2Result>> sp_GetToolsTecByOnetCodeV2Async(string ONetCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ONetCode",
                    Size = 20,
                    Value = ONetCode ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<sp_GetToolsTecByOnetCodeV2Result>("EXEC @returnValue = [dbo].[sp_GetToolsTecByOnetCodeV2] @ONetCode", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<sp_GetWorkStylesByOnetCodeToDeleteResult>> sp_GetWorkStylesByOnetCodeToDeleteAsync(string ONetCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ONetCode",
                    Size = 20,
                    Value = ONetCode ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<sp_GetWorkStylesByOnetCodeToDeleteResult>("EXEC @returnValue = [dbo].[sp_GetWorkStylesByOnetCode-ToDelete] @ONetCode", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<sp_GetWorkValuesByOnetCodeToDeleteResult>> sp_GetWorkValuesByOnetCodeToDeleteAsync(string ONetCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ONetCode",
                    Size = 20,
                    Value = ONetCode ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<sp_GetWorkValuesByOnetCodeToDeleteResult>("EXEC @returnValue = [dbo].[sp_GetWorkValuesByOnetCode-ToDelete] @ONetCode", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
