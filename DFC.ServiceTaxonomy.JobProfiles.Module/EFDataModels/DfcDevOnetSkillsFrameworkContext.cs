// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DFC.ServiceTaxonomy.JobProfiles.Module.EFDataModels
{
    public partial class DfcDevOnetSkillsFrameworkContext : DbContext
    {
        public DfcDevOnetSkillsFrameworkContext()
        {
        }

        public DfcDevOnetSkillsFrameworkContext(DbContextOptions<DfcDevOnetSkillsFrameworkContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Ability> Abilities { get; set; }
        public virtual DbSet<AlternateTitle> AlternateTitles { get; set; }
        public virtual DbSet<CareerChangersMatrix> CareerChangersMatrices { get; set; }
        public virtual DbSet<CareerStartersMatrix> CareerStartersMatrices { get; set; }
        public virtual DbSet<ContentModelReference> ContentModelReferences { get; set; }
        public virtual DbSet<DfcGdscombination> DfcGdscombinations { get; set; }
        public virtual DbSet<DfcGdstranlation> DfcGdstranlations { get; set; }
        public virtual DbSet<DfcGdstranslationsStaging> DfcGdstranslationsStagings { get; set; }
        public virtual DbSet<DfcGlobalAttributeSuppression> DfcGlobalAttributeSuppressions { get; set; }
        public virtual DbSet<DfcLiveSocsLinkedToJobProfileStaging> DfcLiveSocsLinkedToJobProfileStagings { get; set; }
        public virtual DbSet<DfcSocMapping> DfcSocMappings { get; set; }
        public virtual DbSet<DfcSocMappingsStaging> DfcSocMappingsStagings { get; set; }
        public virtual DbSet<DwaReference> DwaReferences { get; set; }
        public virtual DbSet<EducationTrainingExperience> EducationTrainingExperiences { get; set; }
        public virtual DbSet<EmergingTask> EmergingTasks { get; set; }
        public virtual DbSet<EteCategory> EteCategories { get; set; }
        public virtual DbSet<GreenDwaReference> GreenDwaReferences { get; set; }
        public virtual DbSet<GreenOccupation> GreenOccupations { get; set; }
        public virtual DbSet<GreenTaskStatement> GreenTaskStatements { get; set; }
        public virtual DbSet<Interest> Interests { get; set; }
        public virtual DbSet<IwaReference> IwaReferences { get; set; }
        public virtual DbSet<JobZone> JobZones { get; set; }
        public virtual DbSet<JobZoneReference> JobZoneReferences { get; set; }
        public virtual DbSet<Knowledge> Knowledges { get; set; }
        public virtual DbSet<LevelScaleAnchor> LevelScaleAnchors { get; set; }
        public virtual DbSet<OccupationDatum> OccupationData { get; set; }
        public virtual DbSet<OccupationLevelMetadatum> OccupationLevelMetadata { get; set; }
        public virtual DbSet<SampleOfReportedTitle> SampleOfReportedTitles { get; set; }
        public virtual DbSet<ScalesReference> ScalesReferences { get; set; }
        public virtual DbSet<Skill> Skills { get; set; }
        public virtual DbSet<SurveyBookletLocation> SurveyBookletLocations { get; set; }
        public virtual DbSet<TaskCategory> TaskCategories { get; set; }
        public virtual DbSet<TaskRating> TaskRatings { get; set; }
        public virtual DbSet<TaskStatement> TaskStatements { get; set; }
        public virtual DbSet<TasksToDwa> TasksToDwas { get; set; }
        public virtual DbSet<TasksToGreenDwa> TasksToGreenDwas { get; set; }
        public virtual DbSet<ToolsAndTechnology> ToolsAndTechnologies { get; set; }
        public virtual DbSet<UnspscReference> UnspscReferences { get; set; }
        public virtual DbSet<WorkActivity> WorkActivities { get; set; }
        public virtual DbSet<WorkContext> WorkContexts { get; set; }
        public virtual DbSet<WorkContextCategory> WorkContextCategories { get; set; }
        public virtual DbSet<WorkStyle> WorkStyles { get; set; }
        public virtual DbSet<WorkValue> WorkValues { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Ability>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.NotRelevant)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RecommendSuppress)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany()
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__abilities__eleme__7F2BE32F");

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__abilities__onets__7E37BEF6");

                entity.HasOne(d => d.Scale)
                    .WithMany()
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__abilities__scale__00200768");
            });

            modelBuilder.Entity<AlternateTitle>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AlternateTitle1).IsUnicode(false);

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ShortTitle).IsUnicode(false);

                entity.Property(e => e.Sources).IsUnicode(false);

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__alternate__onets__01142BA1");
            });

            modelBuilder.Entity<CareerChangersMatrix>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RelatedOnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__career_ch__onets__02084FDA");

                entity.HasOne(d => d.RelatedOnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.RelatedOnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__career_ch__relat__02FC7413");
            });

            modelBuilder.Entity<CareerStartersMatrix>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RelatedOnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__career_st__onets__03F0984C");

                entity.HasOne(d => d.RelatedOnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.RelatedOnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__career_st__relat__04E4BC85");
            });

            modelBuilder.Entity<ContentModelReference>(entity =>
            {
                entity.HasKey(e => e.ElementId)
                    .HasName("PK__content___388489FB3A88C80F");

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.Description).IsUnicode(false);

                entity.Property(e => e.ElementName).IsUnicode(false);
            });

            modelBuilder.Entity<DfcGdscombination>(entity =>
            {
                entity.HasIndex(e => new { e.OnetElementOneId, e.OnetElementTwoId })
                    .HasName("UQ_DFC_GDSCombinations")
                    .IsUnique();

                entity.Property(e => e.CombinedElementId).IsUnicode(false);

                entity.Property(e => e.Datetimestamp).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description).IsUnicode(false);

                entity.Property(e => e.ElementName).IsUnicode(false);

                entity.Property(e => e.OnetElementOneId).IsUnicode(false);

                entity.Property(e => e.OnetElementTwoId).IsUnicode(false);
            });

            modelBuilder.Entity<DfcGdstranlation>(entity =>
            {
                entity.Property(e => e.OnetElementId).IsUnicode(false);

                entity.Property(e => e.Datetimestamp).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Translation).IsUnicode(false);
            });

            modelBuilder.Entity<DfcGdstranslationsStaging>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<DfcGlobalAttributeSuppression>(entity =>
            {
                entity.Property(e => e.OnetElementId).IsUnicode(false);

                entity.Property(e => e.Datetimestamp).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Reason).IsUnicode(false);
            });

            modelBuilder.Entity<DfcLiveSocsLinkedToJobProfileStaging>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Description).IsUnicode(false);

                entity.Property(e => e.Soccode).IsUnicode(false);

                entity.Property(e => e.Title).IsUnicode(false);
            });

            modelBuilder.Entity<DfcSocMapping>(entity =>
            {
                entity.Property(e => e.SocCode).IsUnicode(false);

                entity.Property(e => e.JobProfile).IsUnicode(false);

                entity.Property(e => e.OnetCode).IsUnicode(false);

                entity.Property(e => e.UpdateStatus).IsUnicode(false);
            });

            modelBuilder.Entity<DfcSocMappingsStaging>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<DwaReference>(entity =>
            {
                entity.HasKey(e => e.DwaId)
                    .HasName("PK__dwa_refe__7D6C35AF5F0A78A7");

                entity.Property(e => e.DwaId).IsUnicode(false);

                entity.Property(e => e.DwaTitle).IsUnicode(false);

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.IwaId).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany(p => p.DwaReferences)
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__dwa_refer__eleme__05D8E0BE");

                entity.HasOne(d => d.Iwa)
                    .WithMany(p => p.DwaReferences)
                    .HasForeignKey(d => d.IwaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__dwa_refer__iwa_i__06CD04F7");
            });

            modelBuilder.Entity<EducationTrainingExperience>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RecommendSuppress)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany()
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__education__eleme__07C12930");

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__education__onets__0A9D95DB");

                entity.HasOne(d => d.Scale)
                    .WithMany()
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__education__scale__08B54D69");

                entity.HasOne(d => d.EteCategory)
                    .WithMany()
                    .HasForeignKey(d => new { d.ElementId, d.ScaleId, d.Category })
                    .HasConstraintName("FK__education_traini__09A971A2");
            });

            modelBuilder.Entity<EmergingTask>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Category).IsUnicode(false);

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Task).IsUnicode(false);

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__emerging___onets__0B91BA14");

                entity.HasOne(d => d.OriginalTask)
                    .WithMany()
                    .HasForeignKey(d => d.OriginalTaskId)
                    .HasConstraintName("FK__emerging___origi__0C85DE4D");
            });

            modelBuilder.Entity<EteCategory>(entity =>
            {
                entity.HasKey(e => new { e.ElementId, e.ScaleId, e.Category })
                    .HasName("PK__ete_cate__3220A6ADB5D2FF0A");

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.Property(e => e.CategoryDescription).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany(p => p.EteCategories)
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ete_categ__eleme__0D7A0286");

                entity.HasOne(d => d.Scale)
                    .WithMany(p => p.EteCategories)
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ete_categ__scale__0E6E26BF");
            });

            modelBuilder.Entity<GreenDwaReference>(entity =>
            {
                entity.HasKey(e => e.GreenDwaId)
                    .HasName("PK__green_dw__796B186E48838AE6");

                entity.Property(e => e.GreenDwaId).IsUnicode(false);

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.GreenDwaTitle).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany(p => p.GreenDwaReferences)
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__green_dwa__eleme__0F624AF8");
            });

            modelBuilder.Entity<GreenOccupation>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.GreenOccupationalCategory).IsUnicode(false);

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__green_occ__onets__10566F31");
            });

            modelBuilder.Entity<GreenTaskStatement>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.GreenTaskType).IsUnicode(false);

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__green_tas__onets__114A936A");

                entity.HasOne(d => d.Task)
                    .WithMany()
                    .HasForeignKey(d => d.TaskId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__green_tas__task___123EB7A3");
            });

            modelBuilder.Entity<Interest>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany()
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__interests__eleme__14270015");

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__interests__onets__1332DBDC");

                entity.HasOne(d => d.Scale)
                    .WithMany()
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__interests__scale__151B244E");
            });

            modelBuilder.Entity<IwaReference>(entity =>
            {
                entity.HasKey(e => e.IwaId)
                    .HasName("PK__iwa_refe__F8A69DE422BCA0CD");

                entity.Property(e => e.IwaId).IsUnicode(false);

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.IwaTitle).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany(p => p.IwaReferences)
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__iwa_refer__eleme__160F4887");
            });

            modelBuilder.Entity<JobZone>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.JobZone1Navigation)
                    .WithMany()
                    .HasForeignKey(d => d.JobZone1)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__job_zones__job_z__17F790F9");

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__job_zones__onets__17036CC0");
            });

            modelBuilder.Entity<JobZoneReference>(entity =>
            {
                entity.HasKey(e => e.JobZone)
                    .HasName("PK__job_zone__FC0EA31A00566DCC");

                entity.Property(e => e.Education).IsUnicode(false);

                entity.Property(e => e.Examples).IsUnicode(false);

                entity.Property(e => e.Experience).IsUnicode(false);

                entity.Property(e => e.JobTraining).IsUnicode(false);

                entity.Property(e => e.Name).IsUnicode(false);

                entity.Property(e => e.SvpRange).IsUnicode(false);
            });

            modelBuilder.Entity<Knowledge>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.NotRelevant)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RecommendSuppress)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany()
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__knowledge__eleme__19DFD96B");

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__knowledge__onets__18EBB532");

                entity.HasOne(d => d.Scale)
                    .WithMany()
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__knowledge__scale__1AD3FDA4");
            });

            modelBuilder.Entity<LevelScaleAnchor>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AnchorDescription).IsUnicode(false);

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany()
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__level_sca__eleme__1BC821DD");

                entity.HasOne(d => d.Scale)
                    .WithMany()
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__level_sca__scale__1CBC4616");
            });

            modelBuilder.Entity<OccupationDatum>(entity =>
            {
                entity.HasKey(e => e.OnetsocCode)
                    .HasName("PK__occupati__8DC17CEBBE6052A0");

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Description).IsUnicode(false);

                entity.Property(e => e.Title).IsUnicode(false);
            });

            modelBuilder.Entity<OccupationLevelMetadatum>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Item).IsUnicode(false);

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Response).IsUnicode(false);

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__occupatio__onets__1DB06A4F");
            });

            modelBuilder.Entity<SampleOfReportedTitle>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ReportedJobTitle).IsUnicode(false);

                entity.Property(e => e.ShownInMyNextMove)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__sample_of__onets__1EA48E88");
            });

            modelBuilder.Entity<ScalesReference>(entity =>
            {
                entity.HasKey(e => e.ScaleId)
                    .HasName("PK__scales_r__853DA6AD2C6E13B0");

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.Property(e => e.ScaleName).IsUnicode(false);
            });

            modelBuilder.Entity<Skill>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.NotRelevant)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RecommendSuppress)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany()
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__skills__element___208CD6FA");

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__skills__onetsoc___1F98B2C1");

                entity.HasOne(d => d.Scale)
                    .WithMany()
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__skills__scale_id__2180FB33");
            });

            modelBuilder.Entity<SurveyBookletLocation>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.Property(e => e.SurveyItemNumber).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany()
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__survey_bo__eleme__22751F6C");

                entity.HasOne(d => d.Scale)
                    .WithMany()
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__survey_bo__scale__236943A5");
            });

            modelBuilder.Entity<TaskCategory>(entity =>
            {
                entity.HasKey(e => new { e.ScaleId, e.Category })
                    .HasName("PK__task_cat__AA42F56111EC8638");

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.Property(e => e.CategoryDescription).IsUnicode(false);

                entity.HasOne(d => d.Scale)
                    .WithMany(p => p.TaskCategories)
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__task_cate__scale__245D67DE");
            });

            modelBuilder.Entity<TaskRating>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RecommendSuppress)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__task_rati__onets__25518C17");

                entity.HasOne(d => d.Scale)
                    .WithMany()
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__task_rati__scale__2739D489");

                entity.HasOne(d => d.Task)
                    .WithMany()
                    .HasForeignKey(d => d.TaskId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__task_rati__task___2645B050");

                entity.HasOne(d => d.TaskCategory)
                    .WithMany()
                    .HasForeignKey(d => new { d.ScaleId, d.Category })
                    .HasConstraintName("FK__task_ratings__282DF8C2");
            });

            modelBuilder.Entity<TaskStatement>(entity =>
            {
                entity.HasKey(e => e.TaskId)
                    .HasName("PK__task_sta__0492148D134B9418");

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Task).IsUnicode(false);

                entity.Property(e => e.TaskType).IsUnicode(false);

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany(p => p.TaskStatements)
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__task_stat__onets__29221CFB");
            });

            modelBuilder.Entity<TasksToDwa>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.DwaId).IsUnicode(false);

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.Dwa)
                    .WithMany()
                    .HasForeignKey(d => d.DwaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tasks_to___dwa_i__2BFE89A6");

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tasks_to___onets__2A164134");

                entity.HasOne(d => d.Task)
                    .WithMany()
                    .HasForeignKey(d => d.TaskId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tasks_to___task___2B0A656D");
            });

            modelBuilder.Entity<TasksToGreenDwa>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.GreenDwaId).IsUnicode(false);

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.GreenDwa)
                    .WithMany()
                    .HasForeignKey(d => d.GreenDwaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tasks_to___green__2EDAF651");

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tasks_to___onets__2CF2ADDF");

                entity.HasOne(d => d.Task)
                    .WithMany()
                    .HasForeignKey(d => d.TaskId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tasks_to___task___2DE6D218");
            });

            modelBuilder.Entity<ToolsAndTechnology>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.HotTechnology)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.T2Example).IsUnicode(false);

                entity.Property(e => e.T2Type).IsUnicode(false);

                entity.HasOne(d => d.CommodityCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.CommodityCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tools_and__commo__30C33EC3");

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__tools_and__onets__2FCF1A8A");
            });

            modelBuilder.Entity<UnspscReference>(entity =>
            {
                entity.HasKey(e => e.CommodityCode)
                    .HasName("PK__unspsc_r__6C0BFFF2F54F0DA4");

                entity.Property(e => e.ClassTitle).IsUnicode(false);

                entity.Property(e => e.CommodityTitle).IsUnicode(false);

                entity.Property(e => e.FamilyTitle).IsUnicode(false);

                entity.Property(e => e.SegmentTitle).IsUnicode(false);
            });

            modelBuilder.Entity<WorkActivity>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.NotRelevant)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RecommendSuppress)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany()
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__work_acti__eleme__32AB8735");

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__work_acti__onets__31B762FC");

                entity.HasOne(d => d.Scale)
                    .WithMany()
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__work_acti__scale__339FAB6E");
            });

            modelBuilder.Entity<WorkContext>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.NotRelevant)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RecommendSuppress)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany()
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__work_cont__eleme__3587F3E0");

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__work_cont__onets__3493CFA7");

                entity.HasOne(d => d.Scale)
                    .WithMany()
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__work_cont__scale__367C1819");

                entity.HasOne(d => d.WorkContextCategory)
                    .WithMany()
                    .HasForeignKey(d => new { d.ElementId, d.ScaleId, d.Category })
                    .HasConstraintName("FK__work_context__37703C52");
            });

            modelBuilder.Entity<WorkContextCategory>(entity =>
            {
                entity.HasKey(e => new { e.ElementId, e.ScaleId, e.Category })
                    .HasName("PK__work_con__3220A6ADB0F1A7B7");

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.Property(e => e.CategoryDescription).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany(p => p.WorkContextCategories)
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__work_cont__eleme__3864608B");

                entity.HasOne(d => d.Scale)
                    .WithMany(p => p.WorkContextCategories)
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__work_cont__scale__395884C4");
            });

            modelBuilder.Entity<WorkStyle>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RecommendSuppress)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany()
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__work_styl__eleme__3B40CD36");

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__work_styl__onets__3A4CA8FD");

                entity.HasOne(d => d.Scale)
                    .WithMany()
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__work_styl__scale__3C34F16F");
            });

            modelBuilder.Entity<WorkValue>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DomainSource).IsUnicode(false);

                entity.Property(e => e.ElementId).IsUnicode(false);

                entity.Property(e => e.OnetsocCode)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ScaleId).IsUnicode(false);

                entity.HasOne(d => d.Element)
                    .WithMany()
                    .HasForeignKey(d => d.ElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__work_valu__eleme__3E1D39E1");

                entity.HasOne(d => d.OnetsocCodeNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.OnetsocCode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__work_valu__onets__3D2915A8");

                entity.HasOne(d => d.Scale)
                    .WithMany()
                    .HasForeignKey(d => d.ScaleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__work_valu__scale__3F115E1A");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
