@namespace DFC.ServiceTaxonomy.Editor._Views_ContentPreview_Button

@using OrchardCore.ContentManagement
@using DFC.ServiceTaxonomy.GraphSync.Models
@inject IContentManager ContentManager

@{
#nullable enable

    ContentItem contentItem = Model.ContentItem;
    string? graphSyncPartText = contentItem.Content[nameof(GraphSyncPart)]?[nameof(GraphSyncPart.Text)]?.Value;
    var hasPublished = await ContentManager.HasPublishedVersionAsync(contentItem);
}

@if (graphSyncPartText != null)
{
    <div class="btn-group">
        <button class="btn btn-info @(!Model.EditMode ? "btn-sm" : "") dropdown-toggle" type="button" id="visualiseButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            @T["Visualise"]
        </button>
        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="visualiseButton">
            <a asp-action="@nameof(DFC.ServiceTaxonomy.GraphVisualiser.Controllers.VisualiseController.Viewer)"
               asp-controller="Visualise"
               asp-area="@typeof(DFC.ServiceTaxonomy.GraphVisualiser.Startup)!.Namespace"
               asp-route-visualise="@(graphSyncPartText +"&graph=draft")"
               asp-route-graph="preview"
               target="_blank"
               class="dropdown-item @(!Model.EditMode ? "btn-sm" : "")">@T["Visualise draft graph"]</a>

            @if (hasPublished)
            {
                <a asp-action="@nameof(DFC.ServiceTaxonomy.GraphVisualiser.Controllers.VisualiseController.Viewer)"
                   asp-controller="Visualise"
                   asp-area="@typeof(DFC.ServiceTaxonomy.GraphVisualiser.Startup)!.Namespace"
                   asp-route-visualise="@(graphSyncPartText +"&graph=published")"
                   asp-route-graph="published"
                   target="_blank"
                   class="dropdown-item @(!Model.EditMode ? "btn-sm" : "")">@T["Visualise published graph"]</a>
            }
        </div>
    </div>
}
