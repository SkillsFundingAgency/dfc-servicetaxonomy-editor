@using DFC.ServiceTaxonomy.ContentApproval.Extensions
@model ContentApprovalItemStatusDashboardPartViewModel

@{
    switch (Model.Card)
    {
        case DashboardItemsStatusCard.InDraft:
            <div class="dashboard-item-status dashboard-item-status-in-draft">
                <a class="overlay" asp-route-area="OrchardCore.Contents" asp-controller="@(typeof(OrchardCore.Contents.Controllers.AdminController).ControllerName())" asp-action="List" asp-route-Options.ContentsStatus="Draft"></a>
                <div class="inner">
                    <div class="dashboard-item-status-icon"><i class="fas fa-pencil-alt"></i></div>
                    <div>
                        <span class="dashboard-item-status-count">@(Model.ContentItemsApprovalCounts?.Count)</span>
                        <span class="dashboard-item-status-type">In Draft</span>
                    </div>
                </div>
            </div>
            break;
        case DashboardItemsStatusCard.WaitingForReview:
            <div class="dashboard-item-status dashboard-item-status-waiting-for-review">
                <a class="overlay" asp-route-area="OrchardCore.Contents" asp-controller="@(typeof(OrchardCore.Contents.Controllers.AdminController).ControllerName())" asp-action="List" asp-route-ContentApproval.SelectedApprovalStatus="ReadyForReview"></a>
                <div class="inner">
                    <div class="dashboard-item-status-icon"><i class="far fa-hourglass"></i></div>
                    <div>
                        <span class="dashboard-item-status-count">@(Model.ContentItemsApprovalCounts?.Count)</span>
                        <span class="dashboard-item-status-type">Waiting For Review</span>
                        <div class="dashboard-item-status-review-types">
                            @{
                            await ReviewTypeLink(ContentReviewStatus.ReadyForReview, ReviewType.ContentDesign);
                            await ReviewTypeLink(ContentReviewStatus.ReadyForReview, ReviewType.SME);
                            await ReviewTypeLink(ContentReviewStatus.ReadyForReview, ReviewType.Stakeholder);
                            await ReviewTypeLink(ContentReviewStatus.ReadyForReview, ReviewType.UX);
                            }
                        </div>
                    </div>
                </div>
            </div>
            break;
        case DashboardItemsStatusCard.InReview:
            <div class="dashboard-item-status dashboard-item-status-in-review">
                <a class="overlay" asp-route-area="OrchardCore.Contents" asp-controller="@(typeof(OrchardCore.Contents.Controllers.AdminController).ControllerName())" asp-action="List" asp-route-ContentApproval.SelectedApprovalStatus="InReview"></a>
                <div class="inner">
                    <div class="dashboard-item-status-icon"><i class="fas fa-search"></i></div>
                    <div>
                        <span class="dashboard-item-status-count">@(Model.ContentItemsApprovalCounts?.Count)</span>
                        <span class="dashboard-item-status-type">In Review</span>
                        <div class="dashboard-item-status-review-types">
                            @{
                            await ReviewTypeLink(ContentReviewStatus.InReview, ReviewType.ContentDesign);
                            await ReviewTypeLink(ContentReviewStatus.InReview, ReviewType.SME);
                            await ReviewTypeLink(ContentReviewStatus.InReview, ReviewType.Stakeholder);
                            await ReviewTypeLink(ContentReviewStatus.InReview, ReviewType.UX);
                            }
                        </div>
                    </div>
                </div>
            </div>
            break;
        case DashboardItemsStatusCard.Published:
            <div class="dashboard-item-status dashboard-item-status-published">
                <a class="overlay" asp-route-area="OrchardCore.Contents" asp-controller="@(typeof(OrchardCore.Contents.Controllers.AdminController).ControllerName())" asp-action="List" asp-route-Options.ContentsStatus="Published"></a>
                <div class="inner">
                    <div class="dashboard-item-status-icon"><i class="far fa-check-circle"></i></div>
                    <div>
                        <span class="dashboard-item-status-count">@(Model.ContentItemsApprovalCounts?.Count)</span>
                        <span class="dashboard-item-status-type">Published</span>
                    </div>
                </div>
            </div>
            break;
    }

// https://stackoverflow.com/questions/60792542/errors-and-warnings-using-functions-block-in-razor-pages
}

@functions {
    #pragma warning disable CS1998
    async Task ReviewTypeLink(ContentReviewStatus status, ReviewType reviewType)
    {
        int count = Model?.ContentItemsApprovalCounts?.ReviewTypeCounts?[(int)reviewType] ?? 0;

        if (count > 0)
        {
            <a class="dashboard-item-status-review-type dashboard-item-status-has-items"
               asp-route-area="OrchardCore.Contents" asp-controller="@(typeof(OrchardCore.Contents.Controllers.AdminController).ControllerName())" asp-action="List"
               asp-route-ContentApproval.SelectedApprovalStatus="@status" asp-route-ContentApproval.SelectedReviewType="@reviewType">@reviewType.GetDisplayName()</a>
        }
        else
        {
            // have review types with zero count as non-clickable <a>'s.
            // if we have them as spans, they're clickable as part of the whole widget, which is confusing
            // as it brings up the manage content page without review type selected
            <a class="dashboard-item-status-review-type">@reviewType.GetDisplayName()</a>
        }
    }
    #pragma warning restore CS1998
}
