@using OrchardCore.Contents
@using OrchardCore.ContentManagement
@inject IAuthorizationService AuthorizationService
@inject IContentManager ContentManager

@{
    ContentItem contentItem = Model.ContentItem;
    var hasPublished = await ContentManager.HasPublishedVersionAsync(contentItem);
    var hasDraft = contentItem.HasDraft();
    var hasEditPermission = await AuthorizationService.AuthorizeAsync(User, CommonPermissions.EditContent, contentItem);
    var hasViewPermission = await AuthorizationService.AuthorizeAsync(User, CommonPermissions.ViewContent, contentItem);
    var hasPreviewPermission = await AuthorizationService.AuthorizeAsync(User, CommonPermissions.PreviewContent, contentItem);
    var isInReview = contentItem.As<ContentApprovalPart>()?.ReviewStatus == ContentReviewStatus.InReview;

}

@if (hasEditPermission && User.HasClaim(c => c.Value == CommonPermissions.EditContent.Name) && !isInReview)
{
    <a asp-action="Edit" asp-controller="ContentApproval" asp-route-area="DFC.ServiceTaxonomy.ContentApproval" asp-route-contentItemId="@contentItem.ContentItemId" asp-route-returnUrl="@FullRequestPath" class="btn btn-sm btn-primary edit"><span>@T["Edit"]</span></a>
}

@if (hasPublished && hasViewPermission)
{
    <a display-for="@contentItem" target="_blank" class="btn btn-sm btn-success view"><span>@T["View"]</span></a>
}

@if (hasDraft && hasPreviewPermission)
{
    <a asp-action="Preview" asp-controller="Item" asp-route-area="OrchardCore.Contents" asp-route-contentItemId="@contentItem.ContentItemId" target="_blank" class="btn btn-sm btn-primary preview"><span>@T["Preview Draft"]</span></a>
}
