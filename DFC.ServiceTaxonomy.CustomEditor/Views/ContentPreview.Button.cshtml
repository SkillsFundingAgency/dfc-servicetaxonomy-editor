@using DFC.ServiceTaxonomy.CustomEditor.Configuration
@using DFC.ServiceTaxonomy.CustomEditor.Constants
@using DFC.ServiceTaxonomy.PageLocation.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Options
@using OrchardCore.ContentManagement
@using OrchardCore.Contents
@inject IAuthorizationService AuthorizationService
@inject IOptions<PagesConfiguration> PagesConfig
@inject IOptions<JobProfilesConfiguration> JobProfilesConfig

@{
    ContentItem contentItem = Model.ContentItem;
    var previewId = Guid.NewGuid();
    var hasPreviewPermission = await AuthorizationService.AuthorizeAsync(User, CommonPermissions.PreviewContent, contentItem);
    var isPreviewRequired = contentItem.ContentType == ContentTypes.Page || contentItem.ContentType == ContentTypes.JobProfile;
}

@if (isPreviewRequired)
{
    var previewURI = contentItem.ContentType == ContentTypes.Page ? PagesConfig.Value.PreviewAppPrefix : JobProfilesConfig.Value.PreviewAppPrefix;
    string url = contentItem.Content[nameof(PageLocationPart)][nameof(PageLocationPart.FullUrl)];
    bool allowPagePreview = !string.IsNullOrWhiteSpace(contentItem.ContentItemVersionId) && contentItem.HasDraft();

    <div class="btn-group btn-group-approval">
        @if (allowPagePreview)
        {
            <a href="@($"{previewURI}{url}")" target="_blank" class="btn btn-info">@T["Preview draft"]</a>
        }
        else
        {
            <button disabled="disabled" class="btn btn-info" title="A draft version must be saved before using the preview">@T["Preview draft"]</button>
        }
    </div>
}
else
{
    if (hasPreviewPermission)
    {
        <a id="previewButton" target="_blank" class="btn btn-info" href="@Url.Action("Index", "Preview", new {area = "OrchardCore.ContentPreview", id = previewId})">@T["Preview"]</a>
    }

    <div id="renderPreviewUrl" style="display: none" data-value="@Url.Action("Render", "Preview", new {area = "OrchardCore.ContentPreview"})"></div>
    <div id="contentItemType" style="display: none" data-value="@Model.ContentItem.ContentType"></div>
    <div id="previewId" style="display: none" data-value="@previewId"></div>
    <div id="previewContentItemId" style="display: none" data-value="@Model.ContentItem.ContentItemId"></div>
    <div id="previewContentItemVersionId" style="display: none" data-value="@Model.ContentItem.ContentItemVersionId"></div>

    <script asp-name="contentpreview-edit" at="Foot"></script>
}
