{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "CustomHostName": {
            "type": "string",
            "defaultValue": ""
        },
        "Environment": {
            "type": "string"
        },
        "KeyVaultCertificateName": {
            "type": "string"
        },
        "KeyVaultName": {
            "type": "string"
        },
        "KeyVaultResourceGroup": {
            "type": "string"
        },
        "SharedAppServicePlanName": {
            "type": "string",
            "defaultValue": ""
        },
        "SharedAppServicePlanResourceGroup": {
            "type": "string",
            "defaultValue": ""
        },
        "Neo4jUrl": {
            "type": "string"
        },
        "Neo4jUrl1": {
            "type": "string"
        },
        "Neo4jUser": {
            "type": "string"
        },
        "Neo4jPassword": {
            "type": "securestring"
        },
        "Neo4jUrlDraft": {
            "type": "string"
        },
        "Neo4jUrlDraft1": {
            "type": "string"
        },
        "Neo4jUserDraft": {
            "type": "string"
        },
        "Neo4jPasswordDraft": {
            "type": "securestring"
        },
        "SqlElasticPoolName": {
            "type": "string"
        },
        "SqlServerName": {
            "type": "string"
        },
        "SqlResourceGroupName": {
            "type": "string"
        },
        "OwlDataGeneratorDefaultLanguage": {
            "type": "string"
        },
        "OwlDataGeneratorDefaultNamespace": {
            "type": "string"
        },
        "OwlDataGeneratorNamespaceUri": {
            "type": "string"
        },
        "OwlDataGeneratorHeaderUri": {
            "type": "string"
        },
        "OwlDataGeneratorHeaderAuthor": {
            "type": "string"
        },
        "OwlDataGeneratorHeaderVersion": {
            "type": "string"
        },
        "OwlDataGeneratorDescription": {
            "type": "string"
        },
        "EventGridTopicEndpoint": {
            "type": "string"
        },
        "EventGridAegSasKey": {
            "type": "string"
        },
        "EventGridEnabled": {
            "type": "bool"
        },
        "apimProxyAddress": {
            "type": "string"
        },
        "ContentApiAddress": {
            "type": "string"
        },
        "PreviewContentApiPrefix": {
            "type": "string"
        },
        "EventGridTopicSku": {
            "type": "string"
        },
        "appSharedCosmosEndpointUrl": {
            "type": "string"
        },
        "appSharedCosmosPrimaryKey": {
            "type": "securestring"
        },
        "PublishedAppPrefix": {
            "type": "string"
        },
        "PreviewAppPrefix": {
            "type": "string"
        },
        "Neo4jEndpoints0Enabled": {
            "type": "bool"
        },
        "Neo4jEndpoints1Enabled": {
            "type": "bool"
        },
        "Neo4jEndpoints2Enabled": {
            "type": "bool"
        },
        "Neo4jEndpoints3Enabled": {
            "type": "bool"
        },
        "Neo4jReplicaSets0GraphInstances0Enabled": {
            "type": "bool"
        },
        "Neo4jReplicaSets0GraphInstances1Enabled": {
            "type": "bool"
        },
        "Neo4jReplicaSets1GraphInstances0Enabled": {
            "type": "bool"
        },
        "Neo4jReplicaSets1GraphInstances1Enabled": {
            "type": "bool"
        },
        "PublishToSlack": {
            "type": "bool"
        },
        "SlackWebhookEndpoint": {
            "type": "securestring",
            "metadata": {
                "description": "the token (everything after https://hooks.slack.com/services/) for an incoming webhook in slack"
            }
        },
        "MediaAzureBlobConnectionString": {
            "type": "securestring"
        },
        "MediaContainerName": {
            "type": "string"
        },
        "MediaBasePath": {
            "type": "string"
        },
        "DigitalAssetsCdn": {
            "type": "string"
        },
        "AzureAdSettingsAuthority": {
            "type": "string"
        },
        "AzureAdSettingsSubscriptionId": {
            "type": "string"
        },
        "AzureAdSettingsCdnProfileName": {
            "type": "string"
        },
        "AzureAdSettingsCdnEndpointName": {
            "type": "string"
        },
        "AzureAdSettingsResourceGroupName": {
            "type": "string"
        },
        "enableAlerts": {
            "type": "bool",
            "metadata": {
                "description": "Enable or disable alerting"
            }
        },
        "ExceptionCountThreshold": {
            "type": "string"
        },
        "CPUPercentageThreshold": {
            "type": "string"
        },
        "MemoryPercentageThreshold": {
            "type": "string"
        }
    },
    "variables": {
        "BuildingBlocksDfcBaseUrl": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/ArmTemplates/",
        "ResourcePrefix": "[tolower(concat('dfc-', parameters('Environment'), '-stax-editor'))]",
        "AppServiceAppInsightsName": "[concat(variables('ResourcePrefix'), '-ai')]",
        "AppServicePlanName": "[if(greater(length(parameters('SharedAppServicePlanName')), 0), parameters('SharedAppServicePlanName'), concat(variables('ResourcePrefix'), '-asp'))]",
        "EventGridTopicName": "[tolower(concat('dfc-', parameters('Environment'), '-stax-egt'))]",
        "AppServicePlanResourceGroup": "[if(greater(length(parameters('SharedAppServicePlanResourceGroup')), 0), parameters('SharedAppServicePlanResourceGroup'), resourceGroup().name)]",
        "DatabaseName": "[concat(variables('ResourcePrefix'), '-db')]",
        "WebAppName": "[concat(variables('ResourcePrefix'), '-as')]",
        "ActionGroupName": "[concat('dfc-', replace(tolower(parameters('Environment')), '-draft', ''), '-stax-shared-actgrp')]",
        "DatabaseTier": "[if(equals(parameters('SqlElasticPoolName'), ''), 'Standard', 'ElasticPool')]"
    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('AppServiceAppInsightsName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('AppServiceAppInsightsName')]"
                    },
                    "attachedService": {
                        "value": ""
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('WebAppName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'app-service.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('WebAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('AppServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('AppServicePlanResourceGroup')]"
                    },
                    "appServiceType": {
                        "value": "app"
                    },
                    "customHostName": {
                        "value": "[parameters('CustomHostName')]"
                    },
                    "certificateThumbprint": {
                        "value": "[if(greater(length(parameters('CustomHostName')),0), reference('editor-certificate').outputs.certificateThumbprint.value, '')]"
                    },
                    "deployStagingSlot": {
                        "value": false
                    },
                    "appServiceAppSettings": {
                        "value": [
                            {
                                "name": "MSDEPLOY_RENAME_LOCKED_FILES",
                                "value": "1"
                            },
                            {
                                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                "value": "[reference(variables('AppServiceAppInsightsName')).outputs.InstrumentationKey.value]"
                            },
                            {
                                "name": "WEBSITE_RUN_FROM_PACKAGE",
                                "value": "0"
                            },
                            {
                                "name": "Neo4j__Endpoints__0__Uri",
                                "value": "[parameters('Neo4jUrl')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__0__Username",
                                "value": "[parameters('Neo4jUser')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__0__Password",
                                "value": "[parameters('Neo4jPassword')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__0__Enabled",
                                "value": "[parameters('Neo4jEndpoints0Enabled')]"
                            },
                            {
                                "name": "Neo4j__ReplicaSets__0__GraphInstances__0__Enabled",
                                "value": "[parameters('Neo4jReplicaSets0GraphInstances0Enabled')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__1__Uri",
                                "value": "[parameters('Neo4jUrl1')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__1__Username",
                                "value": "[parameters('Neo4jUser')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__1__Password",
                                "value": "[parameters('Neo4jPassword')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__1__Enabled",
                                "value": "[parameters('Neo4jEndpoints1Enabled')]"
                            },
                            {
                                "name": "Neo4j__ReplicaSets__0__GraphInstances__1__Enabled",
                                "value": "[parameters('Neo4jReplicaSets0GraphInstances1Enabled')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__2__Uri",
                                "value": "[parameters('Neo4jUrlDraft')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__2__Username",
                                "value": "[parameters('Neo4jUserDraft')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__2__Password",
                                "value": "[parameters('Neo4jPasswordDraft')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__2__Enabled",
                                "value": "[parameters('Neo4jEndpoints2Enabled')]"
                            },
                            {
                                "name": "Neo4j__ReplicaSets__1__GraphInstances__0__Enabled",
                                "value": "[parameters('Neo4jReplicaSets1GraphInstances0Enabled')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__3__Uri",
                                "value": "[parameters('Neo4jUrlDraft1')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__3__Username",
                                "value": "[parameters('Neo4jUserDraft')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__3__Password",
                                "value": "[parameters('Neo4jPasswordDraft')]"
                            },
                            {
                                "name": "Neo4j__Endpoints__3__Enabled",
                                "value": "[parameters('Neo4jEndpoints3Enabled')]"
                            },
                            {
                                "name": "Neo4j__ReplicaSets__1__GraphInstances__1__Enabled",
                                "value": "[parameters('Neo4jReplicaSets1GraphInstances1Enabled')]"
                            },
                            {
                                "name": "OwlDataGeneratorConfigModel__DefaultLanguage",
                                "value": "[parameters('OwlDataGeneratorDefaultLanguage')]"
                            },
                            {
                                "name": "OwlDataGeneratorConfigModel__NamespaceName",
                                "value": "[parameters('OwlDataGeneratorDefaultNamespace')]"
                            },
                            {
                                "name": "OwlDataGeneratorConfigModel__NamespaceIri",
                                "value": "[parameters('OwlDataGeneratorNamespaceUri')]"
                            },
                            {
                                "name": "OwlDataGeneratorConfigModel__HeaderIri",
                                "value": "[parameters('OwlDataGeneratorHeaderUri')]"
                            },
                            {
                                "name": "OwlDataGeneratorConfigModel__HeaderAuthor",
                                "value": "[parameters('OwlDataGeneratorHeaderAuthor')]"
                            },
                            {
                                "name": "OwlDataGeneratorConfigModel__HeaderVersion",
                                "value": "[parameters('OwlDataGeneratorHeaderVersion')]"
                            },
                            {
                                "name": "OwlDataGeneratorConfigModel__DescriptionLabel",
                                "value": "[parameters('OwlDataGeneratorDescription')]"
                            },
                            {
                                "name": "EventGrid__Topics__0__TopicEndpoint",
                                "value": "[parameters('EventGridTopicEndpoint')]"
                            },
                            {
                                "name": "EventGrid__Topics__0__AegSasKey",
                                "value": "[parameters('EventGridAegSasKey')]"
                            },
                            {
                                "name": "EventGrid__PublishEvents",
                                "value": "[parameters('EventGridEnabled')]"
                            },
                            {
                                "name": "OrchardCore_Default_ContentApiPrefix",
                                "value": "[concat(parameters('apimProxyAddress'), '/content/GetContent/api/Execute')]"
                            },
                            {
                                "name": "ContentApiPrefix",
                                "value": "[concat(parameters('ContentApiAddress'), '/api/Execute')]"
                            },
                            {
                                "name": "PreviewContentApiPrefix",
                                "value": "[concat(parameters('PreviewContentApiPrefix'), '/api/Execute')]"
                            },
                            {
                                "name": "EventStoreUrl",
                                "value": "[parameters('appSharedCosmosEndpointUrl')]"
                            },
                            {
                                "name": "EventStoreKey",
                                "value": "[parameters('appSharedCosmosPrimaryKey')]"
                            },
                            {
                                "name": "Pages__PublishedAppPrefix",
                                "value": "[parameters('PublishedAppPrefix')]"
                            },
                            {
                                "name": "Pages__PreviewAppPrefix",
                                "value": "[parameters('PreviewAppPrefix')]"
                            },
                            {
                                "name": "SlackMessagePublishingConfiguration__PublishToSlack",
                                "value": "[parameters('PublishToSlack')]"
                            },
                            {
                                "name": "SlackMessagePublishingConfiguration__SlackWebhookEndpoint",
                                "value": "[parameters('SlackWebhookEndpoint')]"
                            },
                            {
                                "name": "OrchardCore__OrchardCore_Media_Azure__ConnectionString",
                                "value": "[parameters('MediaAzureBlobConnectionString')]"
                            },
                            {
                                "name": "OrchardCore__OrchardCore_Media_Azure__ContainerName",
                                "value": "[parameters('MediaContainerName')]"
                            },
                            {
                                "name": "OrchardCore__OrchardCore_Media_Azure__BasePath",
                                "value": "[parameters('MediaBasePath')]"
                            },
                            {
                                "name": "OrchardCore__OrchardCore_Media_Azure__CreateContainer",
                                "value": false
                            },
                            {
                                "name": "DigitalAssetsCdn",
                                "value": "[parameters('DigitalAssetsCdn')]"
                            },
                            {
                                "name": "AzureAdSettings__ClientId",
                                "value": "dfc-servicetaxonomy-editor-appregistration-id"
                            },
                            {
                                "name": "AzureAdSettings__ClientSecret",
                                "value": "dfc-servicetaxonomy-editor-appregistration-secret"
                            },
                            {
                                "name": "AzureAdSettings__Authority",
                                "value": "[parameters('AzureAdSettingsAuthority')]"
                            },
                            {
                                "name": "AzureAdSettings__SubscriptionId",
                                "value": "[parameters('AzureAdSettingsSubscriptionId')]"
                            },
                            {
                                "name": "AzureAdSettings__CdnProfileName",
                                "value": "[parameters('AzureAdSettingsCdnProfileName')]"
                            },
                            {
                                "name": "AzureAdSettings__CdnEndpointName",
                                "value": "[parameters('AzureAdSettingsCdnEndpointName')]"
                            },
                            {
                                "name": "AzureAdSettings__ResourceGroupName",
                                "value": "[parameters('AzureAdSettingsResourceGroupName')]"
                            }
                        ]
                    }
                }
            },
            "dependsOn": [
                "[variables('AppServiceAppInsightsName')]",
                "editor-certificate"
            ]
        },
        {
            "name": "editor-certificate",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "condition": "[greater(length(parameters('CustomHostName')),0)]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'),'certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultName": {
                        "value": "[parameters('KeyVaultName')]"
                    },
                    "keyVaultCertificateName": {
                        "value": "[parameters('KeyVaultCertificateName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('KeyVaultResourceGroup')]"
                    },
                    "serverFarmId": {
                        "value": "[resourceId(parameters('SharedAppServicePlanResourceGroup'), 'Microsoft.Web/serverfarms', variables('AppServicePlanName'))]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('DatabaseName')]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('SqlResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'SqlServer/sql-database.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "databaseName": {
                        "value": "[variables('DatabaseName')]"
                    },
                    "sqlServerName": {
                        "value": "[parameters('SqlServerName')]"
                    },
                    "elasticPoolName": {
                        "value": "[parameters('SqlElasticPoolName')]"
                    },
                    "databaseTier": {
                        "value": "[variables('DatabaseTier')]"
                    }
                }
            }
        },
        {
            "name": "[variables('EventGridTopicName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'),'eventgrid-topic.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "eventgridTopicName": {
                        "value": "[variables('EventGridTopicName')]"
                    },
                    "eventgridTopicSku": {
                        "value": "[parameters('EventGridTopicSku')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-05-01",
            "name": "[concat(variables('AppServiceAppInsightsName'), '-metric-exceptions')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('AppServiceAppInsightsName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "enabled": {
                        "value": "[parameters('enableAlerts')]"
                    },
                    "alertName": {
                        "value": "[concat(variables('AppServiceAppInsightsName'), '-metric-exceptions')]"
                    },
                    "alertSeverity": {
                        "value": 3
                    },
                    "metricName": {
                        "value": "exceptions/count"
                    },
                    "operator": {
                        "value": "GreaterThan"
                    },
                    "threshold": {
                        "value": "[parameters('ExceptionCountThreshold')]"
                    },
                    "aggregation": {
                        "value": "Count"
                    },
                    "windowSize": {
                        "value": "PT5M"
                    },
                    "evaluationFrequency": {
                        "value": "PT1M"
                    },
                    "actionGroupName": {
                        "value": "[variables('ActionGroupName')]"
                    },
                    "actionGroupResourceGroup": {
                        "value": "[variables('AppServicePlanResourceGroup')]"
                    },
                    "resourceId": {
                        "value": "[resourceId('Microsoft.Insights/Components', variables('AppServiceAppInsightsName'))]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-05-01",
            "name": "[concat(variables('AppServiceAppInsightsName'), '-failure-anomaly-v2')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('AppServiceAppInsightsName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/failure-anomaly-rule.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "alertName": {
                        "value": "[concat(variables('AppServiceAppInsightsName'), '-failure-anomaly-v2')]"
                    },
                    "enabled": {
                        "value": "[parameters('enableAlerts')]"
                    },
                    "resourceId": {
                        "value": "[resourceId('Microsoft.Insights/Components', variables('AppServiceAppInsightsName'))]"
                    },
                    "actionGroupId": {
                        "value": "[resourceId(variables('AppServicePlanResourceGroup'), 'microsoft.insights/actionGroups', variables('ActionGroupName'))]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-05-01",
            "name": "[concat(variables('AppServicePlanName'), '-CPUPercentage')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "enabled": {
                        "value": "[parameters('enableAlerts')]"
                    },
                    "alertName": {
                        "value": "[concat(variables('AppServicePlanName'), '-metric-CPUPercentage')]"
                    },
                    "alertSeverity": {
                        "value": 3
                    },
                    "metricName": {
                        "value": "CpuPercentage"
                    },
                    "operator": {
                        "value": "GreaterThanOrEqual"
                    },
                    "threshold": {
                        "value": "[parameters('CPUPercentageThreshold')]"
                    },
                    "aggregation": {
                        "value": "Average"
                    },
                    "windowSize": {
                        "value": "PT5M"
                    },
                    "evaluationFrequency": {
                        "value": "PT1M"
                    },
                    "actionGroupName": {
                        "value": "[variables('ActionGroupName')]"
                    },
                    "actionGroupResourceGroup": {
                        "value": "[variables('AppServicePlanResourceGroup')]"
                    },
                    "resourceId": {
                        "value": "[resourceId('Microsoft.Web/serverFarms', variables('AppServicePlanName'))]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-05-01",
            "name": "[concat(variables('AppServicePlanName'), '-MemoryPercentage')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "enabled": {
                        "value": "[parameters('enableAlerts')]"
                    },
                    "alertName": {
                        "value": "[concat(variables('AppServicePlanName'), '-metric-MemoryPercentage')]"
                    },
                    "alertSeverity": {
                        "value": 3
                    },
                    "metricName": {
                        "value": "MemoryPercentage"
                    },
                    "operator": {
                        "value": "GreaterThanOrEqual"
                    },
                    "threshold": {
                        "value": "[parameters('MemoryPercentageThreshold')]"
                    },
                    "aggregation": {
                        "value": "Average"
                    },
                    "windowSize": {
                        "value": "PT5M"
                    },
                    "evaluationFrequency": {
                        "value": "PT1M"
                    },
                    "actionGroupName": {
                        "value": "[variables('ActionGroupName')]"
                    },
                    "actionGroupResourceGroup": {
                        "value": "[variables('AppServicePlanResourceGroup')]"
                    },
                    "resourceId": {
                        "value": "[resourceId('Microsoft.Web/serverFarms', variables('AppServicePlanName'))]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}
