parameters:
  - name: defaultBranch
    type: string
    default: 'main'  # main or 'master' depending on your repo

steps:
      - checkout: self
        fetchDepth: 0

      - powershell: |

          $releaseBranch = "$(Build.SourceBranchName)"
          $currentCommit = "$(Build.SourceVersion)"
          $defaultBranch = "${{ parameters.defaultBranch }}"
          $defaultCommit = git rev-parse origin/$defaultBranch

          Write-Host "Current build ($releaseBranch) commit: $currentCommit."
          Write-Host "Default branch ($defaultBranch) commit: $defaultCommit."


          Write-Host "Comparing branches: ($defaultBranch) [${defaultCommit}] and $releaseBranch [${currentCommit}]."

          $diffRange = "$currentCommit...$defaultCommit"
          $diff = git diff --name-only $diffRange

          if ($diff) {
            Write-Host "Change detected while comparing the branches. Identified changes are:"
            $files = $diff.Split("`n")
            for ($i = 0; $i -lt $files.Length; $i++) {
                 Write-Host "$($i + 1). $($files[$i])"
            }
            Write-Error -Message "Failing the deployment due to changes detected between ($defaultBranch) [${defaultCommit}] and $releaseBranch [${currentCommit}]." -Category OperationStopped
            exit 1 # error exit code to fail the job
          } else {
            Write-Host "Continuing the deployment. No changes identified between ($defaultBranch) [${defaultCommit}] and $releaseBranch [${currentCommit}]."
            exit 0 # no change identified do not fail the job
          }
        displayName: 'Compare release branch with default (master/main) branch'
